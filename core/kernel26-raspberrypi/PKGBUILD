# Maintainer: Mike Staszel <mikestaszel@plugapps.com>

# Rasberry Pi kernel and headers

noautobuild=1
plugrel=2
#ftp://ftp.kernel.org/pub/linux/kernel/v2.6/linux-2.6.35.7.tar.bz2
pkgbase="kernel26-raspberrypi"
pkgname=('kernel26-raspberrypi' 'kernel26-headers-raspberrypi')
#_kernelname=${pkgname#kernel26}
_kernelname=""
_basekernel=2.6.35
pkgver=${_basekernel}.7
_pkgrel=1
pkgrel=${_pkgrel}
#pkgrel=${_pkgrel}.${plugrel}
makedepends=('xmlto' 'docbook-xsl' 'make' 'python2')
_patchname="patch-${pkgver}-${_pkgrel}-ARCH"
arch=(arm)
KARCH=arm
LDFLAGS=""
license=('GPL2')
url="http://www.kernel.org"
source=('armdma.patch'
        'args-uncompressed.txt'
        'boot-uncompressed.txt'
        'imagetool-uncompressed.py'
        'ftp://ftp.kernel.org/pub/linux/kernel/v2.6/linux-2.6.35.7.tar.bz2'
        'rp-patches.tar.gz'
        'sys_accept4.patch')
md5sums=('6e7667c6c6348bfeca22eaaa05462d62'
         '9335d1263fd426215db69841a380ea26'
         'a00e424e2fbb8c5a5f77ba2c4871bed4'
         '2f82dbe5752af65ff409d737caf11954'
         'f741879bcd3a5366a1bbe0ad5cdb7935'
         '968a3a9468b90a8a50dae8cafb276760'
         'fdbbc3c4f34d5959504f027bdc1e7a73')

options=('!distcc' '!ccache')

build() {
  cd "${srcdir}/linux-${pkgver}"

  # Copy in the ethernet firmware, needed for make!
  cp ${srcdir}/args-uncompressed.txt arch/arm/boot/
  cp ${srcdir}/boot-uncompressed.txt arch/arm/boot/
  cp ${srcdir}/imagetool-uncompressed.py arch/arm/boot/

  # Prepare sources
  #make prepare
  make clean # sometimes git isn't clean
  make mrproper # same as above
  # Configure the kernel. Replace the line below with one of your choice.
  #make menuconfig # CLI menu for configuration
  #make nconfig # new CLI menu for configuration
  #make oldconfig # using old config from previous kernel version

  # ALARM: add dma_coherent_write_sync calls to USB EHCI driver
  patch -Np1 -i "${srcdir}/rp-patches/rpdh1.patch"
  patch -Np1 -i "${srcdir}/rp-patches/smsc95xx.patch"
  patch -Np1 -i "${srcdir}/armdma.patch"
  patch -Np1 -i "${srcdir}/sys_accept4.patch"

  # Make the config compatible with Arch Linux's naming scheme
  #  sed 's|CONFIG_LOCALVERSION="-trimslice-1.02"|CONFIG_LOCALVERSION="-ARCH"|g' -i .config

  # Copy back our configuration (use with new kernel version)
  #cp ./.config ../${_basekernel}.config
  
  # Halt the build for configuration only
  #return 1

  # Build!
  make -j2 #${MAKEFLAGS} 
}

package_kernel26-raspberrypi() {
  pkgdesc="The Linux Kernel and modules"
  groups=('base')
  depends=('coreutils' 'module-init-tools>=3.12-2')
  replaces=('kernel24' 'kernel24-scsi' 'kernel26-scsi'
            'alsa-driver' 'ieee80211' 'hostap-driver26'
            'pwc' 'nforce' 'squashfs' 'unionfs' 'ivtv'
            'zd1211' 'kvm-modules' 'iwlwifi' 'rt2x00-cvs'
            'gspcav1' 'atl2' 'wlan-ng26' 'rt2500' 'nouveau-drm')
  provides=('kernel26=2.6.38')
  conflicts=('kernel26' 'kernel26-tegra' 'kernel26-omap')
  install=kernel26.install
  optdepends=('crda: to set the correct wireless channels of your country')
  
  KARCH=arm
  cd "${srcdir}/linux-${pkgver}"
  # get kernel version
  _kernver="$(make kernelrelease)"
  mkdir -p ${pkgdir}/{lib/modules,lib/firmware,boot}
  make INSTALL_MOD_PATH=${pkgdir} modules_install
#  cp System.map ${pkgdir}/boot/System.map26${_kernelname}
  cd arch/$KARCH/boot/
  /usr/bin/python2 imagetool-uncompressed.py
  cd "${srcdir}/linux-${pkgver}"
  cp arch/$KARCH/boot/kernel.img ${pkgdir}/boot/kernel.img
  
  # set correct depmod command for install
  sed \
    -e  "s/KERNEL_NAME=.*/KERNEL_NAME=${_kernelname}/g" \
    -e  "s/KERNEL_VERSION=.*/KERNEL_VERSION=${_kernver}/g" \
    -i $startdir/kernel26.install

  # remove build and source links
  rm -f ${pkgdir}/lib/modules/${_kernver}/{source,build}
  # remove the firmware
  rm -rf ${pkgdir}/lib/firmware
  # gzip -9 all modules to save 100MB of space
  find "$pkgdir" -name '*.ko' -exec gzip -9 {} \;
}

package_kernel26-headers-raspberrypi() {
  pkgdesc="Header files and scripts for building modules for kernel26"
  provides=('kernel26-headers=2.35.7')
  conflicts=('kernel26-headers' 'kernel26-headers-tegra' 'kernel26-headers-omap')
  KARCH=arm
  
  mkdir -p ${pkgdir}/lib/modules/${_kernver}
  cd ${pkgdir}/lib/modules/${_kernver}
  ln -sf ../../../usr/src/linux-${_kernver} build
  cd "${srcdir}/linux-${pkgver}"
  install -D -m644 Makefile \
    ${pkgdir}/usr/src/linux-${_kernver}/Makefile
  install -D -m644 kernel/Makefile \
    ${pkgdir}/usr/src/linux-${_kernver}/kernel/Makefile
  install -D -m644 .config \
    ${pkgdir}/usr/src/linux-${_kernver}/.config
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/include

  for i in acpi asm-generic config generated linux math-emu media net pcmcia scsi sound trace video xen; do
    cp -a include/$i ${pkgdir}/usr/src/linux-${_kernver}/include/
  done

  # copy arch includes for external modules
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH
  cp -a arch/$KARCH/include ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/mach-bcm2708
  cp -a arch/$KARCH/mach-bcm2708/include ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/mach-bcm2708/

  # copy files necessary for later builds, like nvidia and vmware
  cp Module.symvers ${pkgdir}/usr/src/linux-${_kernver}
  cp -a scripts ${pkgdir}/usr/src/linux-${_kernver}
  # fix permissions on scripts dir
  chmod og-w -R ${pkgdir}/usr/src/linux-${_kernver}/scripts
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/.tmp_versions

  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/kernel

  cp arch/$KARCH/Makefile ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/
  if [ "$CARCH" = "i686" ]; then
    cp arch/$KARCH/Makefile_32.cpu ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/
  fi
  cp arch/$KARCH/kernel/asm-offsets.s ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/kernel/

  # add headers for lirc package
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video
  cp drivers/media/video/*.h  ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video/
  for i in bt8xx cpia2 cx25840 cx88 em28xx et61x251 pwc saa7134 sn9c102; do
   mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video/$i
   cp -a drivers/media/video/$i/*.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video/$i
  done
#  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/staging/usbvideo/
#  cp -a drivers/staging/usbvideo/*.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/staging/usbvideo/
  # add docbook makefile
  install -D -m644 Documentation/DocBook/Makefile \
    ${pkgdir}/usr/src/linux-${_kernver}/Documentation/DocBook/Makefile
  # add dm headers
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/md
  cp drivers/md/*.h  ${pkgdir}/usr/src/linux-${_kernver}/drivers/md
  # add inotify.h
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/include/linux
  cp include/linux/inotify.h ${pkgdir}/usr/src/linux-${_kernver}/include/linux/
  # add wireless headers
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/net/mac80211/
  cp net/mac80211/*.h ${pkgdir}/usr/src/linux-${_kernver}/net/mac80211/
  # add dvb headers for external modules
  # in reference to:
  # http://bugs.archlinux.org/task/9912
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-core
  cp drivers/media/dvb/dvb-core/*.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-core/
  # add dvb headers for external modules
  # in reference to:
  # http://bugs.archlinux.org/task/11194
  #mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/include/config/dvb/
  #cp include/config/dvb/*.h ${pkgdir}/usr/src/linux-${_kernver}/include/config/dvb/
  # add dvb headers for http://mcentral.de/hg/~mrec/em28xx-new
  # in reference to:
  # http://bugs.archlinux.org/task/13146
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends/
  cp drivers/media/dvb/frontends/lgdt330x.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends/
  cp drivers/media/video/msp3400-driver.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends/
  # add dvb headers  
  # in reference to:
  # http://bugs.archlinux.org/task/20402
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-usb
  cp drivers/media/dvb/dvb-usb/*.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-usb/
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends
  cp drivers/media/dvb/frontends/*.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends/
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/common/tuners
  cp drivers/media/common/tuners/*.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/common/tuners/
  # add xfs and shmem for aufs building
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/fs/xfs
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/mm
  cp fs/xfs/xfs_sb.h ${pkgdir}/usr/src/linux-${_kernver}/fs/xfs/xfs_sb.h
  # add headers vor virtualbox
  # in reference to:
  # http://bugs.archlinux.org/task/14568
  cp -a include/drm $pkgdir/usr/src/linux-${_kernver}/include/
  # add headers for broadcom wl
  # in reference to:
  # http://bugs.archlinux.org/task/14568
  cp -a include/trace $pkgdir/usr/src/linux-${_kernver}/include/
  # add headers for crypto modules
  # in reference to:
  # http://bugs.archlinux.org/task/22081
  cp -a include/crypto $pkgdir/usr/src/linux-${_kernver}/include/
  # copy in Kconfig files
  for i in `find . -name "Kconfig*"`; do 
    mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/`echo $i | sed 's|/Kconfig.*||'`
    cp $i ${pkgdir}/usr/src/linux-${_kernver}/$i
  done

  chown -R root.root ${pkgdir}/usr/src/linux-${_kernver}
  find ${pkgdir}/usr/src/linux-${_kernver} -type d -exec chmod 755 {} \;
  # strip scripts directory
  find ${pkgdir}/usr/src/linux-${_kernver}/scripts  -type f -perm -u+w 2>/dev/null | while read binary ; do
  case "$(file -bi "$binary")" in
    *application/x-sharedlib*) # Libraries (.so)
    /usr/bin/strip $STRIP_SHARED "$binary";;
    *application/x-archive*) # Libraries (.a)
    /usr/bin/strip $STRIP_STATIC "$binary";;
    *application/x-executable*) # Binaries
    /usr/bin/strip $STRIP_BINARIES "$binary";;
    esac 
  done 
  # remove unneeded architectures
  rm -rf ${pkgdir}/usr/src/linux-${_kernver}/arch/{alpha,avr32,blackfin,cris,frv,h8300,ia64,m32r,m68k,m68knommu,mips,microblaze,mn10300,parisc,powerpc,ppc,s390,sh,sh64,sparc,sparc64,um,v850,xtensa}
}
