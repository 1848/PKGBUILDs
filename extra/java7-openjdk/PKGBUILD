# $Id: PKGBUILD 179933 2013-03-12 17:11:40Z andyrtr $
# Maintainer: Andreas Radke <andyrtr@archlinux.org>
# Maintainer: Guillaume ALAUX <guillaume@archlinux.org>
# Contributor: Jan de Groot <jgc@archlinux.org>

# ALARM: Kevin Mihelich <kevin@archlinuxarm.org>
#  - removed doc package, --disable-docs in configure, this is measured in lifetimes to build on ARM
#  - --enable-zero, hotspot changeset, url changed to use Zero hotspot source.
#    original changeset left commented to be able to spot changes on package upgrades
#  - added our architectures to set _JARCH
#  - strip -D_FORTIFY_SOURCE=2 from C/CXXFLAGS
#  - patch to remove a patch that fails with the zero hotspot

pkgname=('jre7-openjdk-headless' 'jre7-openjdk' 'jdk7-openjdk'
         'openjdk7-src')
pkgbase=java7-openjdk
_java_ver=7
_updatever=u17
_icedtea_ver=2.3.8

# check "${srcdir}/icedtea7"/Makefile.am
_CORBA_CHANGESET=516aae5f27cf
_JAXP_CHANGESET=1fbe99283d97
_JAXWS_CHANGESET=3c7be82314bf
_JDK_CHANGESET=deac45dc94f0
_LANGTOOLS_CHANGESET=41426c72b802
_OPENJDK_CHANGESET=ed02a059ea15

#_HOTSPOT_CHANGESET=a152dced63a1 # see "${srcdir}/icedtea7"/hotspot.map
_HOTSPOT_CHANGESET=d8b22e079abe

_bootstrap=0 # 0/1 for quick build or full bootstrap

pkgver=${_java_ver}.${_updatever}_${_icedtea_ver}
pkgrel=1
arch=('i686' 'x86_64')
url="http://icedtea.classpath.org"
license=('custom')
options=('!emptydirs')
makedepends=('jdk7-openjdk' 'libxp' 'libxslt'
             'alsa-lib' 'apache-ant>=1.8.1' 'giflib' 'libpng>=1.5.7' 'gtk2'
             'java-rhino' 'libpulse>=0.9.11' 'zip' 'unzip' 'cpio' 'fastjar' 'wget')
[ "$_bootstrap" = "1" ] && makedepends=(${makedepends[@]} 'eclipse-ecj')

_url=http://icedtea.classpath.org/hg/release/icedtea7-forest-2.3
_zurl=http://icedtea.classpath.org/hg/release/icedtea7-forest-2.1
source=(http://icedtea.classpath.org/download/source/icedtea-${_icedtea_ver}.tar.gz
        ${_url}/archive/${_OPENJDK_CHANGESET}.tar.gz						# openjdk.tar.gz
        ${_url}/corba/archive/${_CORBA_CHANGESET}.tar.gz					# corba.tar.gz
        ${_url}/jaxp/archive/${_JAXP_CHANGESET}.tar.gz						# jaxp.tar.gz
        ${_url}/jaxws/archive/${_JAXWS_CHANGESET}.tar.gz					# jaxws.tar.gz
        ${_url}/jdk/archive/${_JDK_CHANGESET}.tar.gz						# jdk.tar.gz
        ${_url}/langtools/archive/${_LANGTOOLS_CHANGESET}.tar.gz			# langtools.tar.gz
        ${_zurl}/hotspot/archive/${_HOTSPOT_CHANGESET}.tar.gz				# hotspot.tar.gz
        fontconfig-paths.diff
        fix_corba_cmds_path.diff
        openjdk7_fix_jdk_cmds_path.diff
        openjdk7_nonreparenting-wm.diff
        jdk7-openjdk.profile
        jdk7-openjdk.profile.csh
        jre7-openjdk.profile
        jre7-openjdk.profile.csh
        alarm.patch)
sha256sums=('750a4c6e3e22369aa7dcfb0751fe85d5ea7a36b32871861c5063dbcadddc7153'
            '865030303330856c988e353bf1bc86fc95669179b0958a4072538fc59d9a073b'
            '181ceb85a4dade1a8d8465e2d69255ee3612dbc5a50699a59a4f21e69be7a1c6'
            'ed3a963c4309316fba654f0a60ba4bec21b2d170e64423eddfa2ba635ac76572'
            '4abe7366900327a0de21caee8a7b0ea5494821507a02bfb07cffc980cebe90ad'
            '00e3e4cb436f4153434faa2d1063114a9028e9c8a7eacf558873053c47365215'
            'cbef395a2af27673a3611ed50d84a76ae9f9539a7c42ed8e06e171bfc1ac030c'
            '28883ebefcfff1ba8b356a7fabf8e449c25fe7fffe1d563f1f58f887100063f0'
            '9ad943ceb3dbcdf45d72974fc3667886a7ed65c69ab9abc17be5412827551a7f'
            '7b2db65bfb9d5014e1522178d65cabf05dfa85e0926cde5648b5a338db376479'
            'b742113dc6debc3eb92a246e442595481c04a2a3973e7902b86037acb50050ea'
            'fd615f476ef17853ae55b7aee3c92b6738f9ea584e915749b1caa7fdc5ff9ca4'
            'bd55299e08e6f8e61ba5baad0990170891801a29a1e8137e502b5e8a10fc37ea'
            '3f28f8bfc6dd105a07f747d7135c77a77de433e2b8647dd7520a900135203fbd'
            'b7c045b08ad55a9f79390c104fa846d0e7dbb49fccffb2fab2a3824b6b19c9c8'
            '89d99d8ac269ca66e2e279aff652d5aac938a35faec93cd8cff8f048052bd3ce'
            'dd55b150e6119bb82e4b55365ace7e4a6695a4e36047ba91c89db107da9c485c')

noextract=("${_OPENJDK_CHANGESET}.tar.gz"
           "${_CORBA_CHANGESET}.tar.gz"
           "${_JAXP_CHANGESET}.tar.gz"
           "${_JAXWS_CHANGESET}.tar.gz"
           "${_JDK_CHANGESET}.tar.gz"
           "${_LANGTOOLS_CHANGESET}.tar.gz"
           "${_HOTSPOT_CHANGESET}.tar.gz")

  _jvmdir=/usr/lib/jvm/java-7-openjdk
  
  [ "$CARCH" = "x86_64" ] && _JARCH=amd64
  [ "$CARCH" = "i686" ] && _JARCH=i386
  [ "$CARCH" = "arm" -o "$CARCH" = "armv6h" -o "$CARCH" = "armv7h" ] && _JARCH=arm
  
build() {
  cd "${srcdir}/icedtea-${_icedtea_ver}"

  CFLAGS=`echo $CFLAGS | sed -e 's/-D_FORTIFY_SOURCE=2//'` && CXXFLAGS="$CFLAGS"
  patch -p1 -i ../alarm.patch

#  unset JAVA_HOME JDK_HOME CLASSPATH JAVAC JAVACFLAGS
  
#  # default is to build with first found java-environment found in our repos - is jdk7-openjdk
#  [ -f /etc/profile.d/jdk.sh ] && . /etc/profile.d/jdk.sh
  
  export ALT_PARALLEL_COMPILE_JOBS="${MAKEFLAGS/-j}"
  export HOTSPOT_BUILD_JOBS="${ALT_PARALLEL_COMPILE_JOBS}"

  . /etc/profile.d/apache-ant.sh

  cp ${srcdir}/*.diff ${srcdir}/icedtea-${_icedtea_ver}/patches
  export DISTRIBUTION_PATCHES="patches/fontconfig-paths.diff patches/fix_corba_cmds_path.diff patches/openjdk7_fix_jdk_cmds_path.diff patches/openjdk7_nonreparenting-wm.diff"

  if [ "$_bootstrap" = "1" ]; then
     BOOTSTRAPOPT="--enable-bootstrap --with-ecj-jar=/usr/share/java/ecj.jar"
   else 
     BOOTSTRAPOPT="--disable-bootstrap"
  fi

  ./configure \
	$BOOTSTRAPOPT \
        --with-parallel-jobs="${MAKEFLAGS/-j}" \
        --disable-tests \
        --disable-downloading --disable-Werror \
        --with-pkgversion="ArchLinux build ${pkgver}-${pkgrel}-${CARCH}" \
        --with-jdk-home=${JAVA_HOME} \
        --with-openjdk-src-zip=${srcdir}/${_OPENJDK_CHANGESET}.tar.gz \
        --with-hotspot-src-zip=${srcdir}/${_HOTSPOT_CHANGESET}.tar.gz \
        --with-corba-src-zip=${srcdir}/${_CORBA_CHANGESET}.tar.gz \
        --with-jaxp-src-zip=${srcdir}/${_JAXP_CHANGESET}.tar.gz \
        --with-jaxws-src-zip=${srcdir}/${_JAXWS_CHANGESET}.tar.gz \
        --with-jdk-src-zip=${srcdir}/${_JDK_CHANGESET}.tar.gz \
        --with-langtools-src-zip=${srcdir}/${_LANGTOOLS_CHANGESET}.tar.gz \
        --enable-pulse-java \
        --enable-nss \
        --with-rhino \
        --with-abs-install-dir=${_jvmdir} \
        --disable-docs \
        --enable-zero
    make
}

check() {
  cd "${srcdir}/icedtea-${_icedtea_ver}"
#  make -k check
}

package_jre7-openjdk-headless() {
  pkgdesc="Free Java environment based on OpenJDK 7.0 with IcedTea7 replacing binary plugs - Minimal Java runtime - needed for executing non GUI Java programs"
  depends=('libjpeg-turbo' 'lcms2' 'nss' 'ca-certificates-java')
  optdepends=('libcups: needed for Java Mauve support - libmawt.so'
              'fontconfig: needed for Java Mauve support - libmawt.so')
  provides=('java-runtime-headless=7')
  conflicts=('openjdk6')
  backup=(etc/profile.d/jre.sh
          etc/profile.d/jre.csh
          etc/java-7-openjdk/calendars.properties
          etc/java-7-openjdk/content-types.properties
          etc/java-7-openjdk/cursors/cursors.properties
          etc/java-7-openjdk/flavormap.properties
          etc/java-7-openjdk/fontconfig.bfc
          etc/java-7-openjdk/fontconfig.properties
          etc/java-7-openjdk/jvm.cfg
          etc/java-7-openjdk/logging.properties
          etc/java-7-openjdk/management/jmxremote.access
          etc/java-7-openjdk/management/jmxremote.password
          etc/java-7-openjdk/management/management.properties
          etc/java-7-openjdk/management/snmp.acl
          etc/java-7-openjdk/net.properties
          etc/java-7-openjdk/psfont.properties.ja
          etc/java-7-openjdk/psfontj2d.properties
          etc/java-7-openjdk/security/java.policy
          etc/java-7-openjdk/security/java.security
          etc/java-7-openjdk/security/nss.cfg
          etc/java-7-openjdk/sound.properties
          etc/java-7-openjdk/tz.properties)
  install=jre7-openjdk-headless.install

  cd "${srcdir}/icedtea-${_icedtea_ver}/openjdk.build/j2sdk-image/jre"

  mv lib/fontconfig.Ubuntu.properties.src lib/fontconfig.properties
  mv lib/fontconfig.Ubuntu.bfc lib/fontconfig.bfc
  rm -f lib/fontconfig.*.bfc
  rm -f lib/fontconfig.*.properties.src 
  rm -f lib/fontconfig.properties.src

  install -d -m755 ${pkgdir}/${_jvmdir}/jre/
  cp -a bin lib ${pkgdir}/${_jvmdir}/jre

  # Install man pages
  pushd ../../j2re-image/man
  install -m755 -d ${pkgdir}/usr/share/man/{,ja/}man1/
  install -m644 man1/*.1 ${pkgdir}/usr/share/man/man1
  install -m644 ja_JP.UTF-8/man1/*.1 ${pkgdir}/usr/share/man/ja/man1
  popd

  # more files that belong to the desktop package
  mkdir ${srcdir}/tmp-desktop-jre
  for file in \
	"/usr/lib/jvm/java-7-openjdk/jre/bin/policytool" \
	"/usr/lib/jvm/java-7-openjdk/jre/lib/${_JARCH}/libjsoundalsa.so" \
	"/usr/lib/jvm/java-7-openjdk/jre/lib/${_JARCH}/libpulse-java.so" \
	"/usr/lib/jvm/java-7-openjdk/jre/lib/${_JARCH}/libsplashscreen.so" \
	"/usr/lib/jvm/java-7-openjdk/jre/lib/${_JARCH}/xawt/libmawt.so" \
	"/usr/share/man/ja/man1/policytool.1" \
	"/usr/share/man/man1/policytool.1"; do
     dirname=`dirname $file`
     install -dm755 ${srcdir}/tmp-desktop-jre/$dirname || /bin/true
     # mv file from fakeinstall to pkgdir
     mv ${pkgdir}/$file ${srcdir}/tmp-desktop-jre$file
  done
  rmdir ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/${_JARCH}/xawt

  # Link binaries into /usr/bin
  pushd ${pkgdir}/${_jvmdir}/jre/bin
  install -m755 -d ${pkgdir}/usr/bin/
  for file in *; do
    ln -sf ${_jvmdir}/jre/bin/${file} ${pkgdir}/usr/bin
  done
  popd

  # Link JKS keystore from ca-certificates-java
  rm -f ${pkgdir}/${_jvmdir}/jre/lib/security/cacerts
  ln -sf /etc/ssl/certs/java/cacerts "${pkgdir}/${_jvmdir}/jre/lib/security/cacerts"

  # Set some variables
  install -m755 -d ${pkgdir}/etc/profile.d/
  install -m755 ${srcdir}/jre7-openjdk.profile ${pkgdir}/etc/profile.d/jre.sh
  install -m755 ${srcdir}/jre7-openjdk.profile.csh ${pkgdir}/etc/profile.d/jre.csh

  # Install license
  install -m755 -d ${pkgdir}/usr/share/licenses/${pkgbase}/
  install -m644 ASSEMBLY_EXCEPTION LICENSE THIRD_PARTY_README \
                 ${pkgdir}/usr/share/licenses/${pkgbase}
		 
  # Put some more files under backup control
  install -m755 -d ${pkgdir}/etc/java-7-openjdk/
  install -m644 ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/*.properties* ${pkgdir}/etc/java-7-openjdk/
  # install dummy links to make them found by JAVA
  cd ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/
  for file in `ls ${pkgdir}/etc/java-7-openjdk/*.properties*`; do
    ln -vsf /etc/java-7-openjdk/`basename $file` .
  done
  # some more
  install -m755 -d ${pkgdir}/etc/java-7-openjdk/{cursors,management,security}
  install -m644 ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/images/cursors/cursors.properties ${pkgdir}/etc/java-7-openjdk/cursors/
  pushd ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/images/cursors/
    ln -vsf /etc/java-7-openjdk/cursors/cursors.properties .
  popd
  mv ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/management/jmxremote.password.template ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/management/jmxremote.password
  mv ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/management/snmp.acl.template ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/management/snmp.acl
  install -m644 ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/management/{management.properties,jmxremote.access,jmxremote.password,snmp.acl} ${pkgdir}/etc/java-7-openjdk/management/
  pushd ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/management
    ln -vsf /etc/java-7-openjdk/management/{management.properties,jmxremote.access,jmxremote.password,snmp.acl} .
  popd
  install -m644 ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/security/{java.policy,java.security,nss.cfg} ${pkgdir}/etc/java-7-openjdk/security/
  pushd ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/security
    ln -vsf /etc/java-7-openjdk/security/{java.policy,java.security,nss.cfg} .
  popd
  install -m644 ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/fontconfig.bfc ${pkgdir}/etc/java-7-openjdk/
  install -m644 ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/${_JARCH}/jvm.cfg ${pkgdir}/etc/java-7-openjdk/
  pushd ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/${_JARCH}/
     ln -vsf /etc/java-7-openjdk/jvm.cfg .
  popd
}
	 
package_jre7-openjdk() {
  pkgdesc="Free Java environment based on OpenJDK 7.0 with IcedTea7 replacing binary plugs - Full Java runtime environment - needed for executing Java GUI and Webstart programs"
  depends=('jre7-openjdk-headless' 'xdg-utils' 'hicolor-icon-theme')
  optdepends=('icedtea-web-java7: web browser plugin + Java Web Start'
             'alsa-lib: for basic sound support'
             'giflib: for gif format support'
             'libpulse: for advanced sound support'
             'gtk2: for the Gtk+ look and feel - desktop usage'
             'libxtst: linked in xawt/libmawt.so - desktop usage')
  install=jre7-openjdk.install
  provides=('java-runtime=7')
  conflicts=('openjdk6')
  
  mv ${srcdir}/tmp-desktop-jre/* ${pkgdir}
  # Link binaries into /usr/bin
  pushd ${pkgdir}/${_jvmdir}/jre/bin
  install -m755 -d ${pkgdir}/usr/bin/
  for file in *; do
    ln -sf ${_jvmdir}/jre/bin/${file} ${pkgdir}/usr/bin
  done
  popd
  
  cd "${srcdir}/icedtea-${_icedtea_ver}/openjdk.build/j2sdk-image/jre"

  # Install icons and menu entries
  for s in 16 24 32 48 ; do
    install -m755 -d ${pkgdir}/usr/share/icons/hicolor/${s}x${s}/apps/
    install -m644 ../../../openjdk/jdk/src/solaris/classes/sun/awt/X11/java-icon${s}.png \
                  ${pkgdir}/usr/share/icons/hicolor/${s}x${s}/apps/java.png
  done
  
  # Install desktop files.
  install -m755 -d ${pkgdir}/usr/share/applications
  install -m644 ${srcdir}/icedtea-${_icedtea_ver}/policytool.desktop ${pkgdir}/usr/share/applications
}

package_jdk7-openjdk() {
  pkgdesc="Free Java environment based on OpenJDK 7.0 with IcedTea7 replacing binary plugs - SDK"
  depends=('jre7-openjdk')
  provides=('java-environment=7')
  conflicts=('java-environment')
  replaces=('openjdk6')
  backup=(etc/profile.d/jdk.sh etc/profile.d/jdk.csh)

  cd "${srcdir}/icedtea-${_icedtea_ver}/openjdk.build/j2sdk-image"

  # Main files
  install -m755 -d ${pkgdir}/${_jvmdir}/

  cp -a include lib ${pkgdir}/${_jvmdir}

  # 'bin' files
  pushd bin
  install -m755 -d ${pkgdir}/${_jvmdir}/bin/ \
                   ${pkgdir}/usr/bin/ \
                   ${pkgdir}/usr/share/man/{,ja/}man1/

  # 'java-rmi.cgi' will be handled separately as it should not be in the PATH and has no man page
  for b in $(ls | grep -v java-rmi.cgi); do
    if [ -e ../jre/bin/${b} ]; then
      # Provide a link of the jre binary in the jdk/bin/ directory
      ln -s ../jre/bin/${b} ${pkgdir}/${_jvmdir}/bin/${b}
    else
      # Copy binary to jdk/bin/
      install -m755 ${b} ${pkgdir}/${_jvmdir}/bin/${b}
      # Copy man page
      install -m644 ../man/man1/${b}.1 ${pkgdir}/usr/share/man/man1/${b}.1
      install -m644 ../man/ja/man1/${b}.1 ${pkgdir}/usr/share/man/ja/man1/${b}.1
      # Link from /bin/
      ln -s ${_jvmdir}/bin/${b} ${pkgdir}/usr/bin/${b}
    fi
  done
  popd

  # Install desktop files.
  install -m755 -d ${pkgdir}/usr/share/applications
  install -m644 ${srcdir}/icedtea-${_icedtea_ver}/jconsole.desktop ${pkgdir}/usr/share/applications

  # Handling 'java-rmi.cgi' separately
  install -m755 -D bin/java-rmi.cgi ${pkgdir}/${_jvmdir}/bin/java-rmi.cgi

  # Set some variables
  install -m755 -d ${pkgdir}/etc/profile.d/
  install -m755 ${srcdir}/${pkgname}.profile ${pkgdir}/etc/profile.d/jdk.sh
  install -m755 ${srcdir}/${pkgname}.profile.csh ${pkgdir}/etc/profile.d/jdk.csh
}

package_openjdk7-src() {
  pkgdesc="Free Java environment based on OpenJDK 7.0 with IcedTea7 replacing binary plugs - sources"
  replaces=('openjdk6-src')
  
  install -D ${srcdir}/icedtea-${_icedtea_ver}/openjdk.build/j2sdk-image/src.zip \
             ${pkgdir}/${_jvmdir}/src.zip
}
